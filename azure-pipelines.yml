# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- script: |
   # When you paste this, please make sure the indentation is preserved
   # Fail out if any setups fail
   set -e

   # Delete old Pythons
   rm -rf $AGENT_TOOLSDIRECTORY/Python/3.7.3

   # Download new Pythons
   azcopy --recursive \
     --source https://vstsagenttools.blob.core.windows.net/tools/hostedtoolcache/linux/Python/3.7.2 \
     --destination $AGENT_TOOLSDIRECTORY/Python/3.7.2

   # Install new Pythons
   original_directory=$PWD
   setups=$(find $AGENT_TOOLSDIRECTORY/Python -name setup.sh)
   for setup in $setups; do
       chmod +x $setup;
       cd $(dirname $setup);
       ./$(basename $setup);
       cd $original_directory;
   done;
  displayName: 'Workaround: roll back Python versions'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -e .
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines pytest-cov
    pytest tests/ --cov src/pyskindose --cov-report html
  displayName: 'pytest'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
